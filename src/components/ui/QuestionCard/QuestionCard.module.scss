// src/components/ui/QuestionCard/QuestionCard.module.scss
@use '../../../styles/mixins' as mix;

.questionCard {
  @include mix.card-main;
  display: flex;
  flex-direction: column;
  gap: vars.$spacing-2xl;
  max-width: 800px;
  margin: 0 auto;
  position: relative;

  @include mix.mobile-only {
    gap: vars.$spacing-xl;
    padding: vars.$spacing-xl;
  }
}

// Card Variants
.variantDefault {
  // Uses base card styling
}

.variantElevated {
  box-shadow: vars.$shadow-card-hover;
  transform: translateY(-2px);
}

.variantBordered {
  border: 2px solid vars.$border-color;
  border-left: 4px solid vars.$primary-accent-solid;
}

// Question Header
.questionHeader {
  display: flex;
  flex-direction: column;
  gap: vars.$spacing-lg;
}

.questionMeta {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.questionNumber {
  font-size: vars.$font-body-sm;
  font-weight: vars.$font-medium;
  color: vars.$secondary-text;
  background: vars.$light-bg;
  padding: vars.$spacing-xs vars.$spacing-sm;
  border-radius: vars.$radius-sm;
  border: 1px solid vars.$border-color;
}

.questionContent {
  display: flex;
  flex-direction: column;
  gap: vars.$spacing-md;
}

.questionTitle {
  display: flex;
  align-items: flex-start;
  gap: vars.$spacing-md;
}

.questionIcon {
  flex-shrink: 0;
  color: vars.$primary-accent-solid;
  margin-top: vars.$spacing-xs;
}

.questionText {
  font-size: vars.$font-section;
  font-weight: vars.$font-bold;
  color: vars.$primary-text;
  line-height: 1.3;
  margin: 0;

  @include mix.mobile-only {
    font-size: vars.$font-subtitle;
  }
}

.questionDescription {
  color: vars.$secondary-text;
  font-size: vars.$font-body;
  line-height: 1.6;
  margin: 0;
}

// Options List
.optionsList {
  display: flex;
  flex-direction: column;
  gap: vars.$spacing-md;
}

.option {
  @include mix.card-interactive;
  padding: vars.$spacing-lg;
  cursor: pointer;
  transition: vars.$transition-standard;
  position: relative;

  &:hover:not(.optionDisabled) {
    border-color: vars.$primary-accent-solid;
    transform: translateY(-1px);
    box-shadow: vars.$shadow-card;
  }

  &:focus-visible {
    outline: 2px solid vars.$primary-accent-solid;
    outline-offset: 2px;
  }

  &Selected {
    border-color: vars.$primary-accent-solid;
    background: rgba(255, 107, 157, 0.05);
    box-shadow: vars.$shadow-card;

    .optionLetter {
      background: vars.$primary-accent;
      color: white;
      transform: scale(1.1);
    }

    .selectedIndicator {
      opacity: 1;
    }
  }

  &Disabled {
    opacity: 0.6;
    cursor: not-allowed;
    background: vars.$light-bg;

    &:hover {
      transform: none;
      border-color: vars.$border-color;
      box-shadow: none;
    }
  }

  @include mix.mobile-only {
    padding: vars.$spacing-md;
  }
}

.optionContent {
  display: flex;
  align-items: center;
  gap: vars.$spacing-md;
  width: 100%;
}

.optionLetter {
  flex-shrink: 0;
  width: 32px;
  height: 32px;
  border-radius: vars.$radius-full;
  background: vars.$light-bg;
  border: 2px solid vars.$border-color;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: vars.$font-bold;
  font-size: vars.$font-body-sm;
  color: vars.$primary-text;
  transition: vars.$transition-standard;

  @include mix.mobile-only {
    width: 28px;
    height: 28px;
    font-size: vars.$font-caption;
  }
}

.optionText {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: vars.$spacing-xs;
  text-align: left;
}

.optionMain {
  font-size: vars.$font-body;
  font-weight: vars.$font-medium;
  color: vars.$primary-text;
  line-height: 1.5;

  @include mix.mobile-only {
    font-size: vars.$font-body-sm;
  }
}

.optionDescription {
  font-size: vars.$font-body-sm;
  color: vars.$secondary-text;
  line-height: 1.4;

  @include mix.mobile-only {
    font-size: vars.$font-caption;
  }
}

.optionIndicator {
  flex-shrink: 0;
  width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.selectedIndicator {
  color: vars.$primary-accent-solid;
  opacity: 0;
  transition: vars.$transition-standard;
  animation: slideInRight 0.3s ease-out;

  @keyframes slideInRight {
    from {
      transform: translateX(-8px);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }
}

// Error Message
.errorMessage {
  display: flex;
  align-items: center;
  gap: vars.$spacing-xs;
  color: #e53e3e;
  font-size: vars.$font-body-sm;
  font-weight: vars.$font-medium;
  padding: vars.$spacing-sm vars.$spacing-md;
  background: rgba(229, 62, 62, 0.05);
  border: 1px solid rgba(229, 62, 62, 0.2);
  border-radius: vars.$radius-sm;

  svg {
    flex-shrink: 0;
  }
}

// Continue Section
.continueSection {
  display: flex;
  justify-content: center;
  padding-top: vars.$spacing-lg;
  border-top: 1px solid vars.$border-color;

  @include mix.mobile-only {
    padding-top: vars.$spacing-md;
  }
}

.continueButton {
  min-width: 200px;
  
  @include mix.mobile-only {
    width: 100%;
    min-width: auto;
  }
}

// Assessment-specific styling
.assessmentVariant {
  border-left: 4px solid vars.$primary-accent-solid;
  
  .questionText {
    color: vars.$primary-text;
  }
  
  .optionSelected {
    background: linear-gradient(135deg, 
      rgba(255, 107, 157, 0.05) 0%, 
      rgba(255, 138, 155, 0.05) 100%
    );
  }
}

// Multi-select styling
.multiSelect {
  .optionLetter {
    border-radius: vars.$radius-sm;
  }
  
  .optionSelected .optionLetter {
    background: vars.$success-accent-solid;
  }
}

// Responsive adjustments
@include mix.mobile-only {
  .questionCard {
    margin: 0 vars.$spacing-sm;
  }
  
  .optionContent {
    gap: vars.$spacing-sm;
  }
  
  .questionTitle {
    gap: vars.$spacing-sm;
  }
}

// Animation states
.questionCard {
  animation: fadeInUp 0.6s ease-out;

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
}

// Dark mode support
@media (prefers-color-scheme: dark) {
  .questionCard {
    background: #1a202c;
    border-color: #2d3748;
  }
  
  .option {
    background: #2d3748;
    border-color: #4a5568;
    
    &Selected {
      background: rgba(255, 107, 157, 0.1);
    }
  }
  
  .optionLetter {
    background: #4a5568;
    border-color: #2d3748;
  }
}

// Reduced motion support
@media (prefers-reduced-motion: reduce) {
  .questionCard {
    animation: none;
  }
  
  .selectedIndicator {
    animation: none;
  }
  
  .option {
    transition: none;
    
    &:hover:not(.optionDisabled) {
      transform: none;
    }
  }
  
  .optionLetter {
    transition: none;
    
    .optionSelected & {
      transform: none;
    }
  }
}

// High contrast mode
@media (prefers-contrast: high) {
  .questionCard {
    border: 3px solid black;
  }
  
  .option {
    border: 2px solid black;
    
    &Selected {
      background: yellow;
      color: black;
    }
  }
  
  .optionLetter {
    border: 2px solid black;
    
    .optionSelected & {
      background: black;
      color: white;
    }
  }
}

// Print styles
@media print {
  .questionCard {
    page-break-inside: avoid;
    box-shadow: none;
    border: 1px solid black;
  }
  
  .continueButton {
    display: none;
  }
  
  .selectedIndicator {
    display: none;
  }
  
  .optionSelected {
    background: #f0f0f0 !important;
    
    .optionLetter {
      background: black !important;
      color: white !important;
    }
  }
}